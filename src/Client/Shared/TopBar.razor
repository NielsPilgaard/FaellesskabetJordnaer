@using Jordnaer.Client.Authentication
@inject NavigationManager Navigation
@inject AuthStateProvider Client
@inject UserClient UserClient

<MudAppBar Class="auth" Fixed="false" Dense Elevation="5" Style="@($"background: linear-gradient(90deg, {Colors.Teal.Darken2} 0%, {Colors.Teal.Darken3} 35%);")">
    <MudButton Color="Color.Inherit" Href="/">
        <MudText Typo="Typo.h4">Jordn√¶r</MudText>
    </MudButton>
    <MudSpacer />
    <AuthorizeView>
        <Authorized>
            <MudIconButton Icon="@Icons.Material.Filled.DeleteForever" OnClick="@DeleteUser" Variant="Variant.Filled" Color="Color.Error">Slet Bruger</MudIconButton>
            <MudIconButton Icon="@Icons.Material.Filled.Logout" OnClick="@Logout" Variant="Variant.Outlined" Color="Color.Warning" Class="ml-3">Log af</MudIconButton>
            <MudIconButton Icon="@Icons.Material.Filled.Person" OnClick="@NavigateToProfile" Variant="Variant.Filled" Color="Color.Tertiary" Class="ml-3" />
        </Authorized>
        <NotAuthorized>
            <MudIconButton Icon="@Icons.Material.Filled.Login" OnClick="@Login" Variant="Variant.Filled" Color="Color.Tertiary" />
        </NotAuthorized>
    </AuthorizeView>
</MudAppBar>

@code
{
    async Task DeleteUser() => await UserClient.DeleteUserAsync();
    async Task Logout() => await Client.LogoutAsync();
    void Login() => Navigation.NavigateTo("auth/login");
    void NavigateToProfile() => Navigation.NavigateTo("profile");
}
