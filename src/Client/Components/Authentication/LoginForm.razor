@using System.ComponentModel.DataAnnotations
@using System.ComponentModel
@using Jordnaer.Client.Authentication
@using Microsoft.AspNetCore.Components

@inject AuthStateProvider Client
@inject NavigationManager NavigationManager

<EditForm Model="@_loginModel" OnValidSubmit="Login">
    <DataAnnotationsValidator />
    <MudCard>
        <MudCardContent>
            <MudTextField Label="Firstname" @bind-Value="_loginModel.Email" For="@(() => _loginModel.Email)" />
            <MudTextField Label="Password" Class="mt-3" @bind-Value="_loginModel.Password" For="@(() => _loginModel.Password)" InputType="InputType.Password" />
        </MudCardContent>
        <MudCardActions>
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Success">Login</MudButton>
        </MudCardActions>
    </MudCard>
</EditForm>

@if (!string.IsNullOrEmpty(_alertMessage))
{
    <div class="alert alert-danger">@_alertMessage</div>
}

@code {
    string? _alertMessage;

    private LoginModel _loginModel = new();

    async Task Login()
    {
        _alertMessage = string.Empty;
        if (await Client.LoginAsync(_loginModel.Email, _loginModel.Password))
        {
            NavigationManager.NavigateTo("");
        }
        else
        {
            _alertMessage = ErrorMessages.LoginFailed;
        }
    }
}
