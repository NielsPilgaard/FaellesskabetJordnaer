@using Jordnaer.Shared
@using MudBlazor.Services
@inject NavigationManager Navigation
@implements IDisposable
<MudDrawer @bind-Open="@Open" ClipMode="DrawerClipMode.Always" DisableOverlay Elevation="5" Variant="DrawerVariant.Responsive">
    <MudNavMenu>
        <AuthorizeView>
            <Authorized>
                <MudNavLink Match="NavLinkMatch.All" Href="/contacts" Icon="@Icons.Material.Filled.Contacts">Mine Kontakter</MudNavLink>
                <MudNavLink Match="NavLinkMatch.All" Href="/groups" Icon="@Icons.Material.Filled.Group">Mine Grupper</MudNavLink>
                <MudNavLink Match="NavLinkMatch.All" Href="/chat" Icon="@Icons.Material.Filled.Chat">Samtaler</MudNavLink>
                <Feature Name="@FeatureFlags.EVENTS">
                    <MudNavLink Match="NavLinkMatch.All" Href="/events" Icon="@Icons.Material.Filled.EventAvailable">Mine Begivenheder</MudNavLink>
                </Feature>
                <MudDivider />
            </Authorized>
        </AuthorizeView>
        <MudNavLink Match="NavLinkMatch.All" Href="/users" Icon="@Icons.Material.Filled.PersonSearch">Personer</MudNavLink>
        <MudNavLink Match="NavLinkMatch.All" Href="/groups" Icon="@Icons.Material.Filled.Groups">Grupper</MudNavLink>
        <Feature Name="@FeatureFlags.EVENTS">
            <MudNavLink Match="NavLinkMatch.All" Href="/events" Icon="@Icons.Material.Filled.Event">Begivenheder</MudNavLink>
        </Feature>
    </MudNavMenu>
</MudDrawer>

@code {
    [Parameter] public bool Open { get; set; }
    [Parameter] public EventCallback<bool> OpenChanged { get; set; }

    private IDisposable? _locationChangedHandler;

    protected override void OnInitialized()
    {
        _locationChangedHandler = Navigation.RegisterLocationChangingHandler(async context =>
        {
            Open = false;
            await OpenChanged.InvokeAsync(Open);
            StateHasChanged();
        });
    }

    public void Dispose() => _locationChangedHandler?.Dispose();
}
