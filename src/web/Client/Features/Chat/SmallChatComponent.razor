@using System.Globalization
@using System.Security.Claims
@using MassTransit
@if (_activeChat is null)
{
    <MudList>
        @foreach (var chat in _chats)
        {
            <MudListItem OnClick="@(() => SelectChat(chat))" Avatar="@ProfileConstants.Default_Profile_Picture">
                <MudText>@chat.DisplayName</MudText>
            </MudListItem>
        }
    </MudList>

}
else
{
    <MudFab StartIcon="@Icons.Material.Filled.ArrowBack" OnClick="BackToList" Color="Color.Primary" />

    <MudText>@_activeChat!.DisplayName</MudText>

    <MudList>
        @foreach (var message in _activeChat!.Messages)
        {
            <MudListItem>
                @message.SentUtc.GetTimePassed(): @message.Text
            </MudListItem>
        }
    </MudList>
}

@code {
    [Parameter]
    public required UserProfile User { get; set; }

    protected override void OnInitialized()
    {
        _chatUsers = TestData.ChatUserDtos(User);
        _chats = TestData.ChatDtos(User).ToList();
    }

    private List<UserSlim> _chatUsers = new();

    private List<ChatDto> _chats = new();

    private ChatDto? _activeChat;

    private void SelectChat(ChatDto chat) => _activeChat = chat;

    private void BackToList() => _activeChat = null;

    private string _newMessage = string.Empty;

    private void SendMessage()
    {
        if (_activeChat is not null && !string.IsNullOrWhiteSpace(_newMessage))
        {
            _activeChat.Messages.Add(new ChatMessageDto
                {
                    Id = NewId.NextGuid(),
                    SentUtc = DateTime.UtcNow,
                    Sender = new UserSlim
                    {
                        DisplayName = $"{User.FirstName} {User.LastName}",
                        Id = User.Id,
                        ProfilePictureUrl = User.ProfilePictureUrl
                    },
                    Text = _newMessage
                });

            _newMessage = string.Empty;
        }
        else
        {
            //TODO: Add error message
        }
    }

    private void SendMessageOnEnter(KeyboardEventArgs keyboardEventArgs)
    {
        if (keyboardEventArgs.Key is "Enter")
        {
            SendMessage();
        }
    }
}
