@using System.Globalization
@using System.Security.Claims
@using Jordnaer.Shared.Contracts
@using MassTransit
@inject IChatApiClient ChatApiClient
@if (User is null)
{
    return;
}

<MudGrid>
    <MudItem md="4" lg="4" xl="4" xxl="4">
        <MudList Clickable>
            <MudListSubheader>
                <MudText>TODO: Place user search here</MudText>
            </MudListSubheader>
            @foreach (var chat in _chats)
            {
                <MudListItem OnClick="@(() => SelectChat(chat))" Avatar="@ProfileConstants.Default_Profile_Picture">
                    <MudText>@chat.DisplayName</MudText>
                </MudListItem>
            }
        </MudList>
    </MudItem>

    <MudItem md="8" lg="8" xl="8" xxl="8">
        @if (_activeChat != null)
        {
            <MudList DisablePadding Dense>
            @foreach (var message in _activeChat.Messages.Where(message => !message.IsDeleted))
                {
                    @if (IsMessageFromSelf(message))
                    {
                        <MudListItem Class="message-from-self">
                            <MudChip>@message.Text</MudChip>
                        </MudListItem>
                    }
                    else
                    {
                        <MudListItem Avatar="@message.Sender.ProfilePictureUrl">
                            <MudChip>@message.Text</MudChip>
                        </MudListItem>
                    }
                }
            </MudList>
            <MudTextField @bind-Value="_newMessage"
                            FullWidth
                            Immediate
                          Adornment="Adornment.End"
                          TextUpdateSuppression="false"
                          OnKeyDown="SendMessageOnEnter"
                          AdornmentIcon="@Icons.Material.Filled.Send"
                          AdornmentColor="Color.Primary"
                          OnAdornmentClick="SendMessage" />
        }
    </MudItem>
</MudGrid>
@code {
    [Parameter]
    public UserProfile? User { get; set; }

    protected override void OnParametersSet()
    {
        if (User is null) return;

        _chatUsers = TestData.ChatUserDtos(User);
        _chats = TestData.ChatDtos(User);
    }

    private List<ChatUserDto> _chatUsers = new();

    private List<ChatDto> _chats = new();

    private ChatDto? _activeChat;

    private void SelectChat(ChatDto chat) => _activeChat = chat;

    private void BackToList() => _activeChat = null;

    private string _newMessage = string.Empty;

    private async Task SendMessage()
    {
        if (_activeChat is not null && !string.IsNullOrWhiteSpace(_newMessage))
        {
            var dto = new ChatMessageDto
            {
                Id = NewId.NextGuid(),
                SentUtc = DateTime.UtcNow,
                Sender = new ChatUserDto
                {
                    DisplayName = $"{User!.FirstName} {User.LastName}",
                    Id = User.Id,
                    ProfilePictureUrl = User.ProfilePictureUrl
                },
                Text = _newMessage
            };

            await ChatApiClient.SendMessage(dto);
            _activeChat.Messages.Add(dto);

            _newMessage = string.Empty;
        }
        else
        {
            //TODO: Add error message
        }
    }

    private void SendMessageOnEnter(KeyboardEventArgs keyboardEventArgs)
    {
        if (keyboardEventArgs.Key is "Enter")
        {
            SendMessage();
        }
    }

    private bool IsMessageFromSelf(ChatMessageDto message)
    {
        return message.Sender.Id == User?.Id;
    }

}
