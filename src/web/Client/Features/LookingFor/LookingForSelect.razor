@using MudExtensions.Enums
@inject ILookingForCache LookingForCache

<MudSelectExtended ItemCollection="_lookingFor"
                   T="string"
                   Label="Personer som er interesserede i"
                   Placeholder="VÃ¦lg"
                   MultiSelection="true"
                   ValuePresenter="ValuePresenter.Chip"
                   AnchorOrigin="Origin.BottomCenter"
                   SelectedValuesChanged="SelectedLookingForChanged">
</MudSelectExtended>
@code
{
    private List<string> _lookingFor = new();

    [Parameter]
    public string[]? LookingFor { get; set; }

    [Parameter]
    public EventCallback<string[]?> LookingForChanged { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var cachedLookingFor = await LookingForCache.GetOrCreateLookingForAsync();
        _lookingFor = cachedLookingFor.Select(e => e.Name).ToList();
    }

    private async Task SelectedLookingForChanged(IEnumerable<string> lookingFor)
    {
        LookingFor = lookingFor.ToArray();
        await LookingForChanged.InvokeAsync(LookingFor);
    }
}
