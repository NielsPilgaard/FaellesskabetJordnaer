@inject IChatClient ChatClient
@inject NavigationManager NavigationManager
@inject IDialogService DialogService

<MudButton Disabled="Disabled" EndIcon="@Icons.Material.Filled.Message" OnClick="OpenOrStartChat" Color="@(_isMessageSent ? Color.Success : Color.Primary)">@(_isMessageSent ? "Besked sendt!" : "Send Besked")</MudButton>

@code
{
    [Parameter]
    public required List<string> UserIds { get; set; }

    [Parameter]
    public required string InitiatorId { get; set; }

    [Parameter]
    public bool Disabled { get; set; }

    private bool _isMessageSent = false;

    private async Task OpenOrStartChat()
    {
        var getChatResponse = await ChatClient.GetChat(UserIds.ToArray());
        if (getChatResponse is { IsSuccessStatusCode: true, Content: { } chatId })
        {
            NavigationManager.NavigateTo($"/chat/{chatId}");
        }
        else if (getChatResponse is { IsSuccessStatusCode: true, Content: null })
        {
            var parameters = new DialogParameters<SendMessageDialog>
            {
                {
                    dialog => dialog.InitiatorId, InitiatorId
                },
                {
                    dialog => dialog.Recipients, UserIds.Select(id => new UserSlim
                    {
                        DisplayName = string.Empty,
                        ProfilePictureUrl = string.Empty,
                        Id = id
                    })
                }
            };
            var options = new DialogOptions
            {
                CloseOnEscapeKey = true,
                DisableBackdropClick = false,
                NoHeader = true,
                Position = DialogPosition.Center,
                MaxWidth = MaxWidth.Small,
                CloseButton = false
            };

            var dialogReference = await DialogService.ShowAsync<SendMessageDialog>("Send besked", parameters, options);

            var dialogResult =await dialogReference.Result;
            if (!dialogResult.Canceled && dialogResult.Data is true)
            {
                _isMessageSent = true;
            } 
        }
    }
}
