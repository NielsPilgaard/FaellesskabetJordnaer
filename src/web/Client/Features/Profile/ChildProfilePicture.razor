@using FluentValidation
@using Severity = MudBlazor.Severity
@inject ISnackbar Snackbar
@inject IImageApiClient ImageApiClient

<MudFileUpload T="IBrowserFile"
               OnFilesChanged="OnInputFileChanged"
               MaximumFileCount="1"
               Hidden="false"
               Class="flex-1"
               InputClass="absolute mud-width-full mud-height-full overflow-hidden z-20"
               InputStyle="opacity:0">
    <ButtonTemplate>
        <MudImage ObjectPosition="ObjectPosition.Center"
                  ObjectFit="ObjectFit.Fill"
                    Fluid
                  Src="@ChildProfile.PictureUrl"
                  Alt="@(string.IsNullOrEmpty(ChildProfile.FirstName) ? "Billede af barn" : $"Billede af {ChildProfile.FirstName}")" />
    </ButtonTemplate>
</MudFileUpload>

@code {
    [Parameter]
    public required ChildProfile ChildProfile { get; set; }
    [Parameter]
    public required EventCallback<ChildProfile> ChildProfileChanged { get; set; }

    private BrowserFileValidator _browserFileValidator = new();

    private async Task OnInputFileChanged(InputFileChangeEventArgs inputFileChange)
    {
        var validationResult = await _browserFileValidator.ValidateAsync(inputFileChange.File);
        if (!validationResult.IsValid)
        {
            Snackbar.Add(string.Join(" ", validationResult.Errors), Severity.Error);
            return;
        }

        var contentType = inputFileChange.File.ContentType;
        var resizedImageFile = await inputFileChange.File.RequestImageFileAsync(contentType, 200, 200);

        using var ms = new MemoryStream();
        await resizedImageFile.OpenReadStream(BrowserFileValidator.MaxFileSize).CopyToAsync(ms);
        var bytes = ms.ToArray();

        var response = await ImageApiClient.SetChildProfilePicture(new SetChildProfilePicture(ChildProfile, bytes));
        if (response.IsSuccessStatusCode)
        {
            ChildProfile.PictureUrl = response.Content!;
            await ChildProfileChanged.InvokeAsync(ChildProfile);

            ChildProfile.PictureUrl = $"data:{contentType};base64,{Convert.ToBase64String(bytes)}";

            Snackbar.Add("Billedet er blevet gemt.", Severity.Success);
        }
        else
        {
            Snackbar.Add(ErrorMessages.Something_Went_Wrong_Try_Again, Severity.Error);
        }
    }
}
