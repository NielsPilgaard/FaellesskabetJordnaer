@page "/profile"
@using MudExtensions.Enums
@inject ILookingForCache LookingForCache
@inject IProfileApiClient ProfileApiClient
@inject ISnackbar Snackbar
@attribute [Authorize]

<MudLoading @bind-Loading="_isLoading" Darken Overlap>
    @if (_userProfile is null)
    {
        return;
    }

    <EditForm Model="@_userProfile" OnValidSubmit="UpdateUserProfile">

        <DataAnnotationsValidator />

        <MudPaper Elevation="3" Class="pa-4">

            @*TODO: MudImage should be clickable, or have an overlay so we can add an image*@
            <MudImage ObjectPosition="ObjectPosition.Center" ObjectFit="ObjectFit.Fill" Src="@_userProfile.ProfilePictureUrl" Alt="@($"{_userProfile.FirstName}'s profilebillede")" />
            <MudGrid>

                <MudItem xs="12" sm="4">
                    <MudTextField Adornment="Adornment.Start" AdornmentText="@("@")" Required For="() => _userProfile.UserName" @bind-Value="@_userProfile.UserName" Label="Brugernavn" Variant="Variant.Text" InputType="InputType.Text" />
                </MudItem>
                <MudItem xs="12" sm="4">
                    <MudTextField For="() => _userProfile.FirstName" @bind-Value="@_userProfile.FirstName" Label="Fornavn" Variant="Variant.Text" InputType="InputType.Text" name="name" />
                </MudItem>
                <MudItem xs="12" sm="4">
                    <MudTextField For="() => _userProfile.LastName" @bind-Value="@_userProfile.LastName" Label="Efternavn" Variant="Variant.Text" InputType="InputType.Text" name="lastname" />
                </MudItem>
                <MudItem xs="12" sm="4">
                    <MudTextField For="() => _userProfile.ZipCode" @bind-Value="@_userProfile.ZipCode" Label="Postnummer" Placeholder="8000" Variant="Variant.Text" InputType="InputType.Number" name="zipcode" />
                </MudItem>
                <MudItem xs="12" sm="4">
                    <MudTextField For="() => _userProfile.City" @bind-Value="@_userProfile.City" Label="By" Placeholder="Aarhus C" Variant="Variant.Text" InputType="InputType.Text" name="city" />
                </MudItem>
                <MudItem xs="12" sm="4">
                    <MudDatePicker AdornmentColor="Color.Primary"
                                   Color="Color.Primary"
                                      Rounded
                                   Placeholder="@DateTime.Now.ToString("d")"
                                   For="() => _userProfile.DateOfBirth"
                                   OpenTo="OpenTo.Year"
                                   PickerVariant="PickerVariant.Dialog"
                    @bind-Date="@_userProfile.DateOfBirth"
                                   Label="Fødselsdato"
                                   name="dob" />
                </MudItem>
                <MudItem xs="12">
                    @*TODO: Add lookingFor cache*@
                    <MudSelectExtended ItemCollection="_lookingFor.Select(e => e.Name).ToList()"
                                       T="string"
                                       Label="Interesseret i"
                                       MultiSelection="true"
                                       SelectedValues="_userProfile.LookingFor.Select(e => e.Name)"
                                       ValuePresenter="ValuePresenter.Chip"
                                       SelectedValuesChanged="SelectedLookingForChanged">
                    </MudSelectExtended>
                </MudItem>
                <MudItem xs="12">
                    <MudTextFieldExtended For="() => _userProfile.Description"
                                                    AutoSize
                                          Lines="3"
                                                    Immediate
                    @bind-Value="@_userProfile.Description"
                                          Placeholder="Du kan eksempelvis fortælle om dine interesser, uddanelse, familie, børnesyn, værdier og den slags."
                                          Label="Beskrivelse"
                                          Variant="Variant.Text"
                                          InputType="InputType.Text" />
                    </MudItem>
                    </MudGrid>

                    </MudPaper>


                    <MudText Class="mt-10 mb-5" Typo="Typo.h5"><MudIcon Class="mr-2" Icon="@Icons.Material.Filled.ChildCare" />Børn</MudText>


                    <EditChildProfileTabs @bind-Parent="_userProfile"></EditChildProfileTabs>

                    <MudButton Size="Size.Large"
                               StartIcon="@Icons.Material.Filled.Save"
                               Class="my-6"
                               ButtonType="ButtonType.Submit"
                               Variant="Variant.Filled"
                   FullWidth
                   Color="Color.Primary">
            Gem
        </MudButton>

    </EditForm>
</MudLoading>
@code {
    private bool _isLoading = true;
    private UserProfile? _userProfile;
    private IEnumerable<LookingFor> _lookingFor = Enumerable.Empty<LookingFor>();

    private readonly Action<SnackbarOptions> _snackbarOptions = options =>
    {
        options.CloseAfterNavigation = true;
        options.VisibleStateDuration = 3000;
        options.ShowTransitionDuration = 250;
    };

    protected override async Task OnInitializedAsync()
    {
        var userProfile = await ProfileApiClient.GetUserProfile();
        if (!userProfile.IsSuccessStatusCode)
        {

            Snackbar.Add("Det lykkedes ikke at hente dine informationer. Vent et øjeblik og genindlæs så siden.",
              Severity.Warning, _snackbarOptions);
            return;
        }
        _userProfile = userProfile.Content;

        _isLoading = false;
        _lookingFor = await LookingForCache.GetOrCreateLookingForAsync();

    }

    private async Task UpdateUserProfile()
    {
        _isLoading = true;
        var response = await ProfileApiClient.UpdateUserProfile(_userProfile!);
        if (response.IsSuccessStatusCode)
        {
            Snackbar.Add("Dine oplysninger er blevet gemt.", Severity.Success, _snackbarOptions);
        }
        else
        {
            Snackbar.Add("Det lykkedes ikke at opdatere dine informationer. Vent et øjeblik før du prøver igen.", Severity.Warning, _snackbarOptions);
        }
        _isLoading = false;
    }

    private void SelectedLookingForChanged(IEnumerable<string> lookingFor)
    {
        _userProfile!.LookingFor = _lookingFor.Where(e => lookingFor.Contains(e.Name)).ToList();
    }
}
