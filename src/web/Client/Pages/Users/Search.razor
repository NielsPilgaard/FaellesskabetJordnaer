@page "/users"
@using Jordnaer.Shared.UserSearch
@inject IUserSearchApi UserSearchApi
@inject ISnackbar Snackbar

<MudLoading @bind-Loading="_isSearching" Darken Overlap>

    <UserSearchForm OnValidSubmit="@UserSearch" @bind-Filter="_filter" />

    @if (!_hasSearched)
    {
        return;
    }

    <SponsorAd />

    <UserSearchResultComponent Filter="_filter" SearchResult="_searchResult" SelectedPageChanged="@OnSelectedPageChanged" />
</MudLoading>
@code {
    private UserSearchFilter _filter = new();
    private UserSearchResult _searchResult = new();
    private bool _isSearching = false;
    private bool _hasSearched = false;

    private async Task UserSearch()
    {
        _isSearching = true;
        var response = await UserSearchApi.GetUsers(_filter);
        if (response.IsSuccessStatusCode)
        {
            _searchResult = response.Content!;
            _hasSearched = true;
        }
        else
        {
            Snackbar.Add(ErrorMessages.SOMETHING_WENT_WRONG_TRY_AGAIN, Severity.Warning);
        }

        _isSearching = false;
    }

    private async Task OnSelectedPageChanged(int selectedPage)
    {
        _filter.PageNumber = selectedPage;
        await UserSearch();
    }

}
