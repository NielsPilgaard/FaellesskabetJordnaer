@page "/groups/{GroupName}"

@inject IGroupService GroupService
@inject ISnackbar Snackbar
@inject IJSRuntime JsRuntime

<MudLoading @bind-Loading="_isLoading" Darken Overlap>

    @if (_group is null && _isLoading is false)
    {
        <NotFoundComponent Message="Vi fandt ingen gruppe med det navn, beklager!" />
        return;
    }
    @if (_group is null)
    {
        return;
    }

    <MetadataComponent Title="@_group.Name"
                       Description="@($"Beskrivelse af {_group.Name}:\n {_group.ShortDescription}")"
                       Image="@_group.ProfilePictureUrl" />

    <MudFab StartIcon="@Icons.Material.Filled.ArrowBack" Class="mb-5" Color="Color.Primary" OnClick="JsRuntime.GoBackAsync" />

    @*// TODO: Request to join button*@

    <MudGrid>
        <MudItem xs="12">
	        <GroupCard Group="_group"/>
        </MudItem>

        @if (_group.Categories.Length > 0)
        {
            <MudDivider Class="my-5" />
            <MudItem xs="12">
                <MudText Typo="Typo.h5"><MudIcon Class="mr-2" Icon="@Icons.Material.Filled.Star" />Kategorier</MudText>
            </MudItem>
            <MudItem xs="12" Class="d-flex justify-start">
                <MudChipSet ReadOnly>
                    @foreach (var category in _group.Categories)
                    {
                        <MudChip Color="Color.Tertiary">@category</MudChip>
                    }
                </MudChipSet>
            </MudItem>
        }
    </MudGrid>
</MudLoading>

@code {
    [Parameter]
    public string? GroupName { get; set; }

    private GroupSlim? _group;

    private bool _isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        if (GroupName is not null)
        {
            var response = await GroupService.GetSlimGroupByNameAsync(GroupName);
            response.Switch(
                groupSlim => _group = groupSlim,
                _ => { });
        }

        _isLoading = false;
    }
}
