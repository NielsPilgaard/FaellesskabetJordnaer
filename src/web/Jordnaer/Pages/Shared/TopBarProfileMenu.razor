@inject NavigationManager Navigation
@inject IProfileCache ProfileCache
@inject ILocalStorageService LocalStorage

@rendermode InteractiveServer

<MudMenu IconColor="Color.Primary" AnchorOrigin="Origin.BottomCenter">
    <ActivatorContent>
        <MudAvatar>
            <MudImage Src="@_profilePictureUrl" />
        </MudAvatar>
    </ActivatorContent>
    <ChildContent>
        <MudMenuItem Icon="@Icons.Material.Filled.Person" Href="profile">Redig√©r Profil</MudMenuItem>
        <Feature Name="@FeatureFlags.AccountSettings">
	        <MudMenuItem Icon="@Icons.Material.Filled.ManageAccounts" Href="Account/Manage">Konto Indstillinger</MudMenuItem>
        </Feature>        
        <MudDivider />
        <MudMenuItem Icon="@Icons.Material.Filled.Logout" OnAction="Logout">
            Log af
        </MudMenuItem>
    </ChildContent>
</MudMenu>
@code {
    private string _profilePictureUrl = ProfileConstants.Default_Profile_Picture;

    private string? _currentUrl;
    
    private void Logout() => Navigation.NavigateTo($"Account/Logout?returnUrl={_currentUrl}", true);

    protected override async Task OnInitializedAsync()
    {
        var userProfile = await ProfileCache.GetProfileAsync();
        if (userProfile?.ProfilePictureUrl is not null)
        {
            _profilePictureUrl = userProfile.ProfilePictureUrl;
        }
        else
        {
	        ProfileCache.ProfileChanged += SetProfilePictureOnUpdate;
        }

        _currentUrl = Navigation.ToBaseRelativePath(Navigation.Uri);
        Navigation.LocationChanged += OnLocationChanged;
    }

    private void SetProfilePictureOnUpdate(object? sender, UserProfile profile)
    {
        _profilePictureUrl = profile.ProfilePictureUrl;
    }


    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        _currentUrl = Navigation.ToBaseRelativePath(e.Location);
    }

    public void Dispose()
    {
	    Navigation.LocationChanged -= OnLocationChanged;
	    ProfileCache.ProfileChanged -= SetProfilePictureOnUpdate;
    }

}
