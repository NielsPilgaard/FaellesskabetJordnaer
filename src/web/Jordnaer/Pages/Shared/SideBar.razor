@using MudBlazor.Services
@using Refit
@inject NavigationManager Navigation

@rendermode InteractiveServer

<MudDrawer @bind-Open="@Open" ClipMode="DrawerClipMode.Always" DisableOverlay Elevation="5" Variant="DrawerVariant.Responsive">
     <MudNavMenu>
        <AuthorizeView>
            <Authorized>
                <AuthorizedSideBar IsSideBarOpen="Open"/>
            </Authorized>
        </AuthorizeView>
        <MudNavLink Match="NavLinkMatch.All" Href="/users" Icon="@Icons.Material.Filled.PersonSearch">Personer</MudNavLink>
        <MudNavLink Match="NavLinkMatch.Prefix" Href="/groups" Icon="@Icons.Material.Filled.Groups">Grupper</MudNavLink>
        <Feature Name="@FeatureFlags.Events">
            <MudNavLink Match="NavLinkMatch.All" Href="/events" Icon="@Icons.Material.Filled.Event">Begivenheder</MudNavLink>
        </Feature>
    </MudNavMenu>
</MudDrawer>

@code {
    [Parameter] public bool Open { get; set; }
    [Parameter] public EventCallback<bool> OpenChanged { get; set; }

    protected override void OnInitialized()
    {
	    Navigation.RegisterLocationChangingHandler(async _ =>
	    {
		    var drawerWasOpen = Open;

		    Open = false;
		    await OpenChanged.InvokeAsync(Open);

            if (drawerWasOpen)
		    {
			    StateHasChanged();
		    }
	    });
    }
}
