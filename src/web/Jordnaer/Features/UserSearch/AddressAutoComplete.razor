@inject IDataForsyningenClient DataForsyningenClient

<MudAutocomplete T="string"
                 ValueChanged="SearchValueChanged"
                 Placeholder="Søg i nærheden af"
                 Value="Location"
                 SearchFuncWithCancel="@SearchForAddresses"
                 SelectValueOnTab
                 ShowProgressIndicator
                 OpenIcon="@string.Empty"
                 AdornmentIcon="@Icons.Material.Filled.Place"
                 Adornment="Adornment.Start"
                 DebounceInterval="250"
                 Clearable
                 For="@For"
                 MinCharacters="2" />

@code
{
    [Parameter]
    public required string Location { get; set; }
    [Parameter]
    public EventCallback<string> LocationChanged { get; set; }

    [Parameter]
    public required Expression<Func<string?>> For { get; set; }

    public async Task<IEnumerable<string>> SearchForAddresses(string value, CancellationToken cancellationToken)
    {
        var searchResponse = await DataForsyningenClient.GetAddressesWithAutoComplete(value, cancellationToken);

        return searchResponse.IsSuccessStatusCode
          ? searchResponse.Content!.Select(response => response.ToString())
          : Array.Empty<string>();
    }

    private async Task SearchValueChanged(string value)
    {
        Location = value;
        await LocationChanged.InvokeAsync(Location);
    }
}
