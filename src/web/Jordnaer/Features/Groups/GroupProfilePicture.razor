@inject ISnackbar Snackbar
@inject IImageClient ImageClient

<MudFileUpload T="IBrowserFile"
               Accept="image/jpeg, image/png"
               OnFilesChanged="OnInputFileChanged"
               MaximumFileCount="1"
               Hidden="false"
               title="Klik her for at skifte billede"
               Class="flex-1"
               InputClass="absolute mud-height-full overflow-hidden z-20"
               InputStyle="opacity:0;cursor: pointer">
    <ButtonTemplate>
        <MudImage ObjectPosition="ObjectPosition.Center"
                  Style="border-radius: 50%"
                  loading="lazy"
                  Fluid
                  Class="editable-image"
                  Src="@(Group.ProfilePictureUrl ?? ProfileConstants.Default_Profile_Picture)"
                  Alt="@(string.IsNullOrEmpty(Group.Name) ? "Profil billede" : $"{Group.Name}'s profil billede'")" />
    </ButtonTemplate>
</MudFileUpload>

@code {
    [Parameter]
    public required Group Group { get; set; }
    [Parameter]
    public required EventCallback<Group> GroupChanged { get; set; }

    private static readonly BrowserFileValidator BrowserFileValidator = new();

    private async Task OnInputFileChanged(InputFileChangeEventArgs inputFileChange)
    {
        var validationResult = await BrowserFileValidator.ValidateAsync(inputFileChange.File);
        if (!validationResult.IsValid)
        {
            Snackbar.Add(string.Join(" ", validationResult.Errors), Severity.Error);
            return;
        }

        var contentType = inputFileChange.File.ContentType;
        var resizedImageFile = await inputFileChange.File.RequestImageFileAsync(contentType, 200, 200);

        using var ms = new MemoryStream();
        await resizedImageFile.OpenReadStream(BrowserFileValidator.MaxFileSize).CopyToAsync(ms);
        var bytes = ms.ToArray();

        var response = await ImageClient.SetGroupProfilePicture(new SetGroupProfilePicture(Group, bytes));
        if (response.IsSuccessStatusCode)
        {
            Group.ProfilePictureUrl = response.Content!;
            await GroupChanged.InvokeAsync(Group);

            Group.ProfilePictureUrl = $"data:{contentType};base64,{Convert.ToBase64String(bytes)}";

            Snackbar.Add("Billedet er blevet gemt.", Severity.Success);
        }
        else
        {
            Snackbar.Add(ErrorMessages.Something_Went_Wrong_Try_Again, Severity.Error);
        }
    }
}
