@using Microsoft.AspNetCore.Authentication

@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityRedirectManager RedirectManager
@if (_externalLogins.Length == 0)
{
    <div>
        <p>
            Der er ingen eksterne login tjenester konfigureret.
        </p>
    </div>
}
else
{
    <form class="form-horizontal" action="Account/PerformExternalLogin" method="post">
        <MudStack Justify="Justify.Center" Style="max-width: 400px">
            <AntiforgeryToken />
            <input type="hidden" name="ReturnUrl" value="@ReturnUrl" />
            @foreach (var provider in _externalLogins)
            {
                switch (provider.DisplayName)
                {
                    case "Facebook":
                        <MudButton StartIcon="@Icons.Custom.Brands.Facebook"
                                   Variant="Variant.Filled"
                                   Style="background-color: #3B5998;
	                                          color: white;"
                                   ButtonType="ButtonType.Submit"
                                   name="provider"
                                   value="@provider.Name">
                            Log ind med Facebook
                        </MudButton>
                        break;
                    case "Google":
                        <MudButton StartIcon="@Icons.Custom.Brands.Google"
                                   Variant="Variant.Filled"
                                   Style="background-color: #dd4b39;
	                                          color: white;"
                                   ButtonType="ButtonType.Submit"
                                   name="provider"
                                   value="@provider.Name">
                            Log ind med Google
                        </MudButton>
                        break;
                    case "Microsoft":
                        <MudButton StartIcon="@SvgIcons.Microsoft"
                                   Variant="Variant.Filled"
                                   Color="Color.Primary"
                                   ButtonType="ButtonType.Submit"
                                   name="provider"
                                   value="@provider.Name">
                            Log ind med Microsoft
                        </MudButton>
                        break;
                    default:
                        <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log ind med din @provider.DisplayName-konto">@provider.DisplayName</button>
                        break;
                }
            }
        </MudStack>
    </form>
}


@code {
    private AuthenticationScheme[] _externalLogins = [];

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _externalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).ToArray();
    }
}
