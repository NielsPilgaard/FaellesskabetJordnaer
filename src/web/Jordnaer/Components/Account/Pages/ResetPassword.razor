@page "/Account/ResetPassword"
@using System.Text
@using Microsoft.AspNetCore.WebUtilities

@inject IdentityRedirectManager RedirectManager
@inject UserManager<ApplicationUser> UserManager

<MetadataComponent Title="Nulstil adgangskode"/>

<h1>Nulstil adgangskode</h1>
<h2>Nulstil din adgangskode.</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <StatusMessage Message="@Message" />
        <EditForm Model="Input" FormName="reset-password" OnValidSubmit="OnValidSubmitAsync" method="post">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />

            <input type="hidden" name="Input.Code" value="@Input.Code" />
            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="navn@eksempel.com" />
                <label for="email" class="form-label">Email</label>
                <ValidationMessage For="() => Input.Email" class="text-danger" />
            </div>
            <div class="form-floating mb-3">
                <InputText type="password" @bind-Value="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="Indtast venligst din adgangskode." />
                <label for="password" class="form-label">Adgangskode</label>
                <ValidationMessage For="() => Input.Password" class="text-danger" />
            </div>
            <div class="form-floating mb-3">
                <InputText type="password" @bind-Value="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="Bekræft venligst din adgangskode." />
                <label for="confirm-password" class="form-label">Bekræft adgangskode</label>
                <ValidationMessage For="() => Input.ConfirmPassword" class="text-danger" />
            </div>
            <button type="submit" class="w-100 btn btn-lg btn-primary">Nulstil</button>
        </EditForm>
    </div>
</div>

@code {
    private IEnumerable<IdentityError>? _identityErrors;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    [SupplyParameterFromQuery]
    private string? Code { get; set; }

    private AlertMessage? Message => _identityErrors is null ? null : new AlertMessage(_identityErrors.Select(error => error.Description), true);

    protected override void OnInitialized()
    {
        if (Code is null)
        {
            RedirectManager.RedirectTo("Account/InvalidPasswordReset");
        }

        Input.Code = Encoding.UTF8.GetString(WebEncoders.Base64UrlDecode(Code));
    }

    private async Task OnValidSubmitAsync()
    {
        var user = await UserManager.FindByEmailAsync(Input.Email);
        if (user is null)
        {
            // Don't reveal that the user does not exist
            RedirectManager.RedirectTo("Account/ResetPasswordConfirmation");
        }

        var result = await UserManager.ResetPasswordAsync(user, Input.Code, Input.Password);
        if (result.Succeeded)
        {
            RedirectManager.RedirectTo("Account/ResetPasswordConfirmation");
        }

        _identityErrors = result.Errors;
    }

    private sealed class InputModel
    {
        [Required(ErrorMessage = "Email er påkrævet.")]
        [EmailAddress(ErrorMessage = "Email skal være gyldig.")]
        public string Email { get; set; } = "";

        [Required(ErrorMessage = "Påkrævet.")]
        [StringLength(100, ErrorMessage = "Din {0} skal være mindst {2} og maks {1} karakterer langt.", MinimumLength = 6)]
        [DataType(DataType.Password)]
        [Display(Name = "Adgangskode")]
        public string Password { get; set; } = "";

        [DataType(DataType.Password)]
        [Display(Name = "Gentag adgangskode")]
        [Compare("Password", ErrorMessage = "Adgangskoderne matcher ikke.")]
        public string ConfirmPassword { get; set; } = "";

        [Required(ErrorMessage = "Påkrævet.")]
        public string Code { get; set; } = "";
    }
}
