@page "/Account/ResendEmailConfirmation"
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.WebUtilities

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager

<MetadataComponent Title="Gensend emailbekræftelse"/>

<h1>Gensend emailbekræftelse</h1>
<h2>Indtast din email.</h2>
<hr />
<StatusMessage Message="@_message" />
<div class="row">
	<div class="col-md-4">
		<EditForm Model="Input" FormName="resend-email-confirmation" OnValidSubmit="OnValidSubmitAsync" method="post">
			<DataAnnotationsValidator />
			<ValidationSummary class="text-danger" role="alert" />
			<div class="form-floating mb-3">
				<InputText @bind-Value="Input.Email" class="form-control" aria-required="true" placeholder="navn@eksempel.com" />
				<label for="email" class="form-label">Email</label>
				<ValidationMessage For="() => Input.Email" class="text-danger" />
			</div>
			<button type="submit" class="w-100 btn btn-lg btn-primary">Gensend</button>
		</EditForm>
	</div>
</div>


@code {
    private AlertMessage? _message;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    private async Task OnValidSubmitAsync()
    {
        var user = await UserManager.FindByEmailAsync(Input.Email!);
        if (user is null)
        {
            _message = new AlertMessage("Bekræftelses-emailen er afsendt. Tjek venligst din email.");
            return;
        }

        var userId = await UserManager.GetUserIdAsync(user);
        var code = await UserManager.GenerateEmailConfirmationTokenAsync(user);
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
            NavigationManager.ToAbsoluteUri("Account/ConfirmEmail").AbsoluteUri,
            new Dictionary<string, object?> { ["userId"] = userId, ["code"] = code });
        await EmailSender.SendConfirmationLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));

        _message = new AlertMessage("Bekræftelses-emailen er afsendt. Tjek venligst din email.");
    }

    private sealed class InputModel
    {
        [Required(ErrorMessage = "Påkrævet.")]
        [EmailAddress(ErrorMessage = "Email skal være gyldig.")]
        public string Email { get; set; } = "";
    }
}
